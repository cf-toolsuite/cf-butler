plugins {
    id 'com.gorylenko.gradle-git-properties' version '2.0.0'
    id 'org.springframework.boot' version '2.2.0.M4'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.github.ben-manes.versions' version '0.21.0'
	id 'java'
    id 'jacoco'
    id 'com.github.spotbugs' version '2.0.0'
}

gitProperties {
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "UTC"
}

spotbugs {
    toolVersion = '4.0.0-beta1'
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'low'
    showProgress = true
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        html {
            enabled = true
        }
        xml {
            enabled = false
        }
    }
}

group = 'io.pivotal'
version = '0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
    mavenLocal()
}

ext {
    set('springCloudServicesVersion', '2.1.4.RELEASE')
	set('springCloudVersion', 'Hoxton.M1')
    // @see https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-dependencies/pom.xml
    set('spring-data-releasetrain.version', 'Moore-BUILD-SNAPSHOT')
    set('spring-framework.version', '5.2.0.BUILD-SNAPSHOT')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
	}
}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

configurations {
	// exclude Logback
    implementation.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
	}
}

jacoco {
	toolVersion = "0.8.4"
}

jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
		csv.enabled = false
	}
}

dependencies {
    annotationProcessor('org.projectlombok:lombok')
    implementation('org.projectlombok:lombok')
    implementation('org.springframework.boot:spring-boot-configuration-processor')
    implementation('org.apache.commons:commons-lang3')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    implementation('com.fasterxml.uuid:java-uuid-generator:3.2.0')
    implementation('org.springframework.credhub:spring-credhub-cloud-connector:2.0.1.RELEASE')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-log4j2')
    // @see https://spring.io/blog/2019/05/15/spring-data-r2dbc-1-0-m2-and-spring-boot-starter-released
    implementation('org.springframework.boot.experimental:spring-boot-starter-data-r2dbc:0.1.0.M1')
    implementation('org.springframework.boot.experimental:spring-boot-actuator-autoconfigure-r2dbc:0.1.0.M1')
    implementation('org.springframework.data:spring-data-r2dbc:1.0.0.BUILD-SNAPSHOT')
    // FIXME Seems like we shouldn't have a dependency on Spring JDBC
    implementation('org.springframework:spring-jdbc')
    implementation('io.r2dbc:r2dbc-client:0.8.0.M8')
    // FIXME r2dbc-pool does not appear ready for primetime when used with spring-boot-starter-data-r2dbc properties resolution
    //runtime('io.r2dbc:r2dbc-pool:0.8.0.M8')
    implementation('io.r2dbc:r2dbc-h2:0.8.0.M8')
    runtime('io.r2dbc:r2dbc-postgresql:0.8.0.M8')
    runtime('io.github.mirromutth:r2dbc-mysql:0.1.0.BUILD-SNAPSHOT')
    implementation('org.eclipse.jgit:org.eclipse.jgit:5.4.0.201906121030-r')
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('com.sendgrid:sendgrid-java:4.4.1') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    implementation('org.apache.httpcomponents:httpclient:4.5.9')
    implementation('org.cloudfoundry:cloudfoundry-client-reactor:3.15.0.RELEASE')
    implementation('org.cloudfoundry:cloudfoundry-operations:3.15.0.RELEASE')
    implementation('io.projectreactor:reactor-core:3.3.0.M1')
    implementation('io.projectreactor.addons:reactor-extra:3.3.0.M1')
    implementation('io.projectreactor.netty:reactor-netty:0.9.0.M2')
    implementation('io.micrometer:micrometer-registry-prometheus')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.junit.jupiter:junit-jupiter-params')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    testImplementation('org.mockito:mockito-core')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	    exclude group: 'junit', module: 'junit'
    }
}

check.dependsOn jacocoTestReport
